name: linter-test

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # we want to test our package on several versions of Python
        python-version: [3.13]

#    services:
#      postgres:
#        image: postgres:15
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: test_db
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd "pg_isready -U postgres"
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        # make depends on poetry
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --with dev
      - name: Run lint
        run: make lint

#      - name: Run database migrations
#        env:
#          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
#        run: |
#          poetry run alembic revision --autogenerate -m "CI Auto Migration" || true
#          poetry run alembic upgrade head || true

      - name: Run test-coverage
        env:
          TEST_SERVICE_URL: ${{ env.TEST_SERVICE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TEST_DATABASE_URL: "sqlite+aiosqlite:///:memory:"
#          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
#          GITHUB_ACTIONS: true
        run: make test-coverage

      - name: Publish code coverage to Code Climate
        if: github.ref_name == 'main'
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          debug: true

